### Starting build.
# Target: main.ml.depends, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -modules main.ml > main.ml.depends # cached
# Target: ai.mli.depends, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), extension:mli, file:ai.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -modules ai.mli > ai.mli.depends # cached
# Target: types.ml.depends, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), extension:ml, file:types.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -modules types.ml > types.ml.depends # cached
# Target: types.cmo, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:types.cmo, file:types.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -o types.cmo types.ml # cached
# Target: ai.cmi, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), byte, compile, extension:mli, file:ai.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -o ai.cmi ai.mli # cached
# Target: command.mli.depends, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), extension:mli, file:command.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -modules command.mli > command.mli.depends # cached
# Target: command.cmi, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), byte, compile, extension:mli, file:command.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -o command.cmi command.mli # cached
# Target: gui.mli.depends, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), extension:mli, file:gui.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -modules gui.mli > gui.mli.depends # cached
# Target: state.mli.depends, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), extension:mli, file:state.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -modules state.mli > state.mli.depends # cached
# Target: grid_3d.mli.depends, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), extension:mli, file:grid_3d.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -modules grid_3d.mli > grid_3d.mli.depends # cached
# Target: parse_init.mli.depends, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), extension:mli, file:parse_init.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -modules parse_init.mli > parse_init.mli.depends # cached
# Target: parse_init.cmi, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), byte, compile, extension:mli, file:parse_init.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -o parse_init.cmi parse_init.mli # cached
# Target: grid_3d.cmi, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), byte, compile, extension:mli, file:grid_3d.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -o grid_3d.cmi grid_3d.mli # cached
# Target: state.cmi, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), byte, compile, extension:mli, file:state.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -o state.cmi state.mli # cached
# Target: gui.cmi, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), byte, compile, extension:mli, file:gui.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -o gui.cmi gui.mli # cached
# Target: krazy.mli.depends, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), extension:mli, file:krazy.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -modules krazy.mli > krazy.mli.depends # cached
# Target: krazy.cmi, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), byte, compile, extension:mli, file:krazy.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -o krazy.cmi krazy.mli # cached
# Target: main.cmo, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -o main.cmo main.ml # cached
# Target: ai.ml.depends, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), extension:ml, file:ai.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -modules ai.ml > ai.ml.depends # cached
# Target: ai.cmo, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:ai.cmo, file:ai.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -o ai.cmo ai.ml # cached
# Target: command.ml.depends, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), extension:ml, file:command.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -modules command.ml > command.ml.depends # cached
# Target: command.cmo, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:command.cmo, file:command.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -o command.cmo command.ml # cached
# Target: gui.ml.depends, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), extension:ml, file:gui.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -modules gui.ml > gui.ml.depends # cached
# Target: gui.cmo, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:gui.cmo, file:gui.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -o gui.cmo gui.ml # cached
# Target: krazy.ml.depends, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), extension:ml, file:krazy.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -modules krazy.ml > krazy.ml.depends # cached
# Target: krazy.cmo, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:krazy.cmo, file:krazy.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -o krazy.cmo krazy.ml # cached
# Target: parse_init.ml.depends, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), extension:ml, file:parse_init.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -modules parse_init.ml > parse_init.ml.depends # cached
# Target: parse_init.cmo, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:parse_init.cmo, file:parse_init.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -o parse_init.cmo parse_init.ml # cached
# Target: state.ml.depends, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), extension:ml, file:state.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -modules state.ml > state.ml.depends # cached
# Target: state.cmo, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:state.cmo, file:state.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -o state.cmo state.ml # cached
# Target: grid_3d.ml.depends, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), extension:ml, file:grid_3d.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -modules grid_3d.ml > grid_3d.ml.depends # cached
# Target: grid_3d.cmo, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), byte, compile, extension:cmo, extension:ml, file:grid_3d.cmo, file:grid_3d.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg -o grid_3d.cmo grid_3d.ml # cached
# Target: main.byte, tags: { package(ANSITerminal), package(CAMLImages), package(CAMLImages.jpeg), package(CAMLImages.png), package(Graphics), package(YOJSon), package(oUnit), package(str), byte, dont_link_with, extension:byte, file:main.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -package oUnit -package YOJSon -package str -package ANSITerminal -package Graphics -package CAMLImages -package CAMLImages.png -package CAMLImages.jpeg types.cmo parse_init.cmo grid_3d.cmo command.cmo state.cmo ai.cmo gui.cmo krazy.cmo main.cmo -o main.byte # cached
# Compilation successful.
